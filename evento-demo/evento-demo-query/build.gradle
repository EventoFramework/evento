import org.evento.cli.PublishBundle
import org.evento.cli.UpdateVersion

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.eventoframework:evento-cli:ev1.2.2'
    }
}


plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'org.evento'
version '1.0-SNAPSHOT'
sourceCompatibility = '19'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.integration:spring-integration-jdbc'
    runtimeOnly 'mysql:mysql-connector-java'


    implementation project(':evento-consumer-state-store:evento-consumer-state-store-mysql')
    implementation project(":evento-demo:evento-demo-api")
}

tasks.register('prepareKotlinBuildScriptModel') {

}

test {
    useJUnitPlatform()
}

tasks.register('eventoUpdateVersion') {
    dependsOn 'clean'
    doLast {
        UpdateVersion.run(file("./src").toString())
    }
}
tasks.register('eventoPublish') {
    dependsOn 'bootJar'
    doLast {
        PublishBundle.run(file(".").toString(), 'http://localhost:3000',
                'https://github.com/EventoFramework/evento-framework/blob/main/evento-demo/evento-demo-query')
    }
}
tasks.register('eventoUpdateVersionAndPublish') {
    dependsOn 'eventoUpdateVersion'
    finalizedBy(eventoPublish)
}