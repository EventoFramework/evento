plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'com.eventoframework.bus'
version 'ev1.2.18'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'


    implementation project(':evento-common')
    // https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
    api group: 'com.rabbitmq', name: 'amqp-client', version: '5.16.0'

}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

publishing {
    publications{
        mavenJava(MavenPublication){
            groupId = group
            artifactId = 'evento-bus-rabbitmq'
            version = version
            from components.java
            pom {
                name = "Evento Framework - Message Bus - RabbitMQ"
                description = "RabbitMQ implementation of an Evento Framework Message Bus"
                url = "https://github.com/EventoFramework/evento-framework/tree/main/evento-bus/evento-bus-rabbitmq"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://raw.githubusercontent.com/EventoFramework/evento-framework/main/LICENSE.txt"
                    }
                }

                developers {
                    developer {
                        id = "gaborgalazzo"
                        name = "Gabor Galazzo"
                        email = "gabor.galazzo@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/EventoFramework/evento-framework.git"
                    developerConnection = "scm:git:ssh://github.com/EventoFramework/evento-framework.git"
                    url = "https://github.com/EventoFramework/evento-framework/tree/main/evento-parser"
                }
            }

            repositories {
                maven {
                    name = "OSSRH"
                    url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = project.properties["mavenCentralUsername"]
                        password = project.properties["mavenCentralPassword"]
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc{
    if(JavaVersion.current().isJava9Compatible()){
        options.addBooleanOption("html5", true)
    }
}
